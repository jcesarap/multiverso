/* Pseudo-class */
:root {
    /* Make available throughout document */
    /* Custom properties */
    --background-color: #1E1E1E;
    --blue: #1976D2;
    --white: #fffdfc;
    --grayed_text: #b5b5b5;
}

* {}

/* Selecting elements */
html,
body {
    font-family: 'Roboto', 'Helvetica Neue', Arial, sans-serif;
    height: 100%;
    width: 100%;
    margin: 0;
    /* Otherwise it does get truly fullscreen */
}

h1 {
    font-size: 4.5rem;
    font-weight: 300;
}

h2 {
    font-size: 2.5rem;
    font-weight: lighter;
}

button {
    background-color: #1976D2;
    border: 0;
    border-radius: 5px;
}

input {
    width: 20vw;
    height: 3vh;
}

img {
    display: inline;
}

/* ===================================================== */

.container {
    display: flex;
    /* To apply columns/rows to children */
    width: 100%;
    /* Make the container encompass everything */
    min-height: 100%;
    /* In regards to the size of the html/body element */
    ;
    /* Use vh for viewport units */
}

/* Each different class, with common rules, is joined by dots */
.column.left {
    /* Defines the actual proportion - the size before any resizing for change in monitor size */
    max-width: 40%;
    flex-basis: 0;
    flex-grow: 1;
    flex-shrink: 1;
    /* Defines the actual proportion - Tells it to not grow nor shrink regardless of monitor size */
    background-color: #fffdfc;
}

.column.right {
    background-color: var(--background-color);
    /* Remaining space, fixed */
    display: flex;
    align-items: center;
    justify-content: center;

    /* Remaining space, fixed */
    flex-basis: auto;
    flex-grow: 1;
    padding: 1rem;
    /* Root font size */

    position: relative;
}

.left_column_content {
    padding-left: 10rem;
    padding-right: 10rem;
    padding-top: 13rem;
}

.right_column_content {
    padding-left: 10rem;
    padding-right: 10rem;
    min-height: 55vh;
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.column_heading {
    text-align: center;
    padding-bottom: 2rem;
}

.profile {
    position: absolute;
    bottom: 1rem;
    right: 1rem;
    border-radius: 50%;
    background-image: url('assets/design/avatar.png');
    height: 2rem;
    width: 2rem;
    background-size: cover;
    background-position: center;
}

.close {
    position: absolute;
    top: 1rem;
    right: -8rem;

    background-image: url('assets/design/close.png');
    background-color: transparent;
    background-repeat: no-repeat;
    background-size: contain;
}

.reminder {
    position: absolute;
    bottom: 1rem;
    right: 20rem;
    border-radius: 10rem;
    color: #FFFFFF;
    background-color: #1976D2;
    height: 4rem;
    display: flex;
    align-items: center;
}

.logo-heading {
    display: flex;
    align-items: center;
}

.dropdown {
    display: flex;
}

#profile-overlay {
    position: fixed;
    width: 100vw;
    height: 100vh;
    display: flex;
    /* To apply columns/rows to children */
    align-items: center;
    justify-content: center;
    z-index: 1;
    display: none;
    /* Hidden by default */
}

#profile-overlay.show {
    /* Styles elements with #id and .class         (. is like + on cc) */
    display: flex;
    /* this more specific rule, applies but this, to the former ones */
}

#new-project-overlay {
    position: fixed;
    width: 100vw;
    height: 100vh;
    display: flex;
    /* To apply columns/rows to children */
    align-items: center;
    justify-content: center;
    z-index: 1;
    display: none;
    /* Hidden by default */
}

#new-project-overlay.show {
    /* Styles elements with #id and .class         (. is like + on cc) */
    display: flex;
    /* this more specific rule, applies but this, to the former ones */
}

#new-project-overlay p {
    padding-right: 3rem;
}

#dropdown-menu {
    /* WHERE */
    position: absolute;
    list-style: none;
    margin-top: 6rem;
    margin-left: -3rem;
    /* STYLE */
    background-color: var(--white);
    padding: 1rem 3rem 0.5rem 3rem;
    border-radius: 0.5rem;
    display: none;
    width: 10vw;
    /* NEW for scroll */
    max-height: 9rem;
    /* Adjust height as needed */
    overflow-y: auto;
    /* Enable vertical scrolling */
    overflow-x: hidden;
    /* Hide horizontal scroll if any */
}

#dropdown-menu li {
    padding-bottom: 2rem;
}

#dropdown-menu.show {
    display: block;
}

.profile-overlay-content {
    position: absolute;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    background-color: var(--background-color);
    padding: 4rem 4rem 8rem 4rem;

    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
    border-radius: 1rem;

    align-items: center;
}

.overlay-heading {
    display: flex;
    flex-direction: column;
    gap: 0rem;
    /* Only applies to flex containers */
}

.recentes {
    border-radius: 0.3rem 0rem 0rem 0.3rem;
}

.icon {
    border-radius: 0rem 0.3rem 0.3rem 0rem;
}


/* ================================= SPECIFIC ========================================== */

/* select(parent -> child) = p elements in left column */
.left_column_content p {
    margin-top: 0;
}

.left_column_content h1 {
    margin-bottom: 0;
}

.left_column_content h2 {
    margin-top: 0;
    margin-bottom: 1rem;
}

.left_column_content h2,
p {
    padding-left: 2rem;
    max-width: 25rem;
}

.left_column_content img {
    max-width: 12rem;
    padding-right: -2rem;
}

.right_column_content h3 {
    color: #FFFFFF;
    font-size: 2rem;
}

.right_column_content button {
    color: var(--white);
}

.profile-overlay-content h1,
.profile-overlay-content p {
    color: #fffdfc;
    line-height: 1;
    margin-left: auto;
    margin-right: auto;
}

.profile-overlay-content h1 {
    font-size: 3.8rem;
    max-width: 40rem;
    text-align: center;
}

.profile-overlay-content p {
    color: var(--grayed_text);
    margin-top: -1.5rem;
    max-width: 40rem;
    margin-bottom: 3rem;
    /* text-align: center; */
}

.profile-overlay-content button {
    color: var(--white);
}

.profile-overlay-content button {
    width: 10vw;
    height: 2vw;
}

.right_column_content>button:not(.dropdown) {
    /* > = children of = (button);         :not() = except */
    width: 15vw;
    height: 4vw;
    font-size: 1.4rem;
}

.column.right> :not(h3) {
    align-items: center;
}

.dropdown button {
    padding: 0.3rem 0.3rem 0.3rem 1rem;
    margin-top: 1rem;
    width: 5vw;
    height: 3vw;
    font-size: 1rem;
}

button.icon {
    padding: 0.3rem 1rem 0.3rem 1rem;
}

button:hover {
    filter: brightness(85%);
    transition: filter 0.2s ease;
}

#dropdown-menu li:hover {
    color: var(--grayed_text);
}
